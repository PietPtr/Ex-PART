pru in (20, 20) at (2, 2) {
    input tl_in_packet : Maybe Int8
    output tl_out_packet : Maybe Int8
    input br_in_packet : Maybe Int8
    output br_out_packet : Maybe Int8

    router_row_1[1].west_i<-tl_in_packet
    router_row_1[1].west_o->tl_out_packet
    router_row_3[4].south_o->br_out_packet
    router_row_3[4].south_i<-br_in_packet

    -- input north_i : Maybe Int8
    -- input east_i : Maybe Int8
    -- input south_i : Maybe Int8
    -- input west_i : Maybe Int8
    -- input core_packet : Maybe Packet
    -- output route_cmd : FIFOCommand

    
    -- router.route_cmd->route_cmd

    -- router.north_i<-north_i
    -- router.east_i<-east_i
    -- router.south_i<-south_i
    -- router.west_i<-west_i

    -- router.ready_for_packet->core.read_packet

    unplaced router in (14, 14) {
        input north_i : Maybe Int8
        input east_i : Maybe Int8
        input south_i : Maybe Int8
        input west_i : Maybe Int8

        output north_o : Maybe Int8
        output east_o : Maybe Int8
        output south_o : Maybe Int8
        output west_o : Maybe Int8

        output route_cmd : FIFOCommand
        output ready_for_packet : Bool
        input packet_from_core : Maybe Packet

        input my_x : Unsigned 4
        input my_y : Unsigned 4

        unplaced send_queue in (14, 14) {
            input packet : Maybe Packet
            output value : Maybe Int8

            queue is packet_queue in (14, 14) at (0, 0)
            serializer is pkt_ser in (14, 14) at (0, 0)

            queue.datain<-packet

            serializer.value->value
            serializer.packet<-queue.dataout
            serializer.empty_send_queue<-queue.empty
            serializer.read_from_send_queue->queue.read
        }

        repeat deserializers at (0, 0) {
            component = pkt_des in (14, 14),
            amount = 4,
            layout = identical
        }

        deserializers[1].value<-north_i
        deserializers[1].packet->dir_dec.from_north
        deserializers[2].value<-east_i
        deserializers[2].packet->dir_dec.from_east
        deserializers[3].value<-south_i
        deserializers[3].packet->dir_dec.from_south
        deserializers[4].value<-west_i
        deserializers[4].packet->dir_dec.from_west

        dir_dec is direction_decider in (14, 14) at (0, 0)
        dir_dec.ready->ready_for_packet
        dir_dec.to_proc->route_cmd
        dir_dec.my_x<-my_x
        dir_dec.my_y<-my_y
        dir_dec.from_core<-packet_from_core

        repeat queues at (0, 0) {
            component = send_queue in (14, 14),
            amount = 4,
            layout = identical
        }

        queues[1].packet<-dir_dec.to_north
        queues[1].value->north_o
        queues[2].packet<-dir_dec.to_east
        queues[2].value->east_o
        queues[3].packet<-dir_dec.to_south
        queues[3].value->south_o
        queues[4].packet<-dir_dec.to_west
        queues[4].value->west_o

    }

    chain router_row_1 at (0, 0) {
        component = router in (14, 14),
        amount = 4,
        layout = horizontal,
        chain_in = west_i,
        chain_out = east_o
    }

    router_row_1[4].west_o->router_row_1[3].east_i
    router_row_1[3].west_o->router_row_1[2].east_i
    router_row_1[2].west_o->router_row_1[1].east_i

    router_row_1:south_o->router_row_2:north_i
    router_row_1:south_i<-router_row_2:north_o

    router_row_1[1].my_y<-(1)
    router_row_1[2].my_y<-(1)
    router_row_1[3].my_y<-(1)
    router_row_1[4].my_y<-(1)

    router_row_1[1].my_x<-(1)
    router_row_1[2].my_x<-(2)
    router_row_1[3].my_x<-(3)
    router_row_1[4].my_x<-(4)

    chain router_row_2 at (0, router_row_1_1.h) {
        component = router in (14, 14),
        amount = 4,
        layout = horizontal,
        chain_in = west_i,
        chain_out = east_o
    }

    router_row_2[4].west_o->router_row_2[3].east_i
    router_row_2[3].west_o->router_row_2[2].east_i
    router_row_2[2].west_o->router_row_2[1].east_i

    router_row_2:south_o->router_row_3:north_i
    router_row_2:south_i<-router_row_3:north_o

    router_row_2[1].my_y<-(2)
    router_row_2[2].my_y<-(2)
    router_row_2[3].my_y<-(2)
    router_row_2[4].my_y<-(2)

    router_row_2[1].my_x<-(1)
    router_row_2[2].my_x<-(2)
    router_row_2[3].my_x<-(3)
    router_row_2[4].my_x<-(4)

    chain router_row_3 at (0, router_row_2_1.h + router_row_2_1.y) {
        component = router in (14, 14),
        amount = 4,
        layout = horizontal,
        chain_in = west_i,
        chain_out = east_o
    }

    router_row_3[4].west_o->router_row_3[3].east_i
    router_row_3[3].west_o->router_row_3[2].east_i
    router_row_3[2].west_o->router_row_3[1].east_i

    router_row_3[1].my_y<-(3)
    router_row_3[2].my_y<-(3)
    router_row_3[3].my_y<-(3)
    router_row_3[4].my_y<-(3)

    router_row_3[1].my_x<-(1)
    router_row_3[2].my_x<-(2)
    router_row_3[3].my_x<-(3)
    router_row_3[4].my_x<-(4)

    repeat cap_top_row at (0, 0) {
        component = cap in (100, 80),
        amount = 4,
        layout = identical
    }

    router_row_1:north_o->cap_top_row:to
    router_row_1:north_i<-cap_top_row:from

    repeat cap_bot_row at (0, 0) {
        component = cap in (100, 80),
        amount = 3,
        layout = identical
    }

    router_row_3[1-3]:south_o->cap_bot_row:to
    router_row_3[1-3]:south_i<-cap_bot_row:from

    cap02 is cap in (100, 80) at (0, 0)
    cap03 is cap in (100, 80) at (0, 0)
    cap51 is cap in (100, 80) at (0, 0)
    cap52 is cap in (100, 80) at (0, 0)
    cap53 is cap in (100, 80) at (0, 0)

    router_row_2[1].west_i<-cap02.from
    router_row_2[1].west_o->cap02.to
    router_row_3[1].west_i<-cap03.from
    router_row_3[1].west_o->cap03.to

    router_row_1[4].east_i<-cap51.from
    router_row_1[4].east_o->cap51.to
    router_row_2[4].east_i<-cap52.from
    router_row_2[4].east_o->cap52.to
    router_row_3[4].east_i<-cap53.from
    router_row_3[4].east_o->cap53.to

    repeat cores at (0, 0) {
        component = inactive_core in (100, 80),
        amount = 12,
        layout = identical
    }

    cores[1-4]:pkt->router_row_1:packet_from_core
    cores[5-8]:pkt->router_row_2:packet_from_core
    cores[9-12]:pkt->router_row_3:packet_from_core

    cores[1-4]:route_cmd<-router_row_1:route_cmd
    cores[5-8]:route_cmd<-router_row_2:route_cmd
    cores[9-12]:route_cmd<-router_row_3:route_cmd

    cores[1-4]:ready_for_packet<-router_row_1:ready_for_packet
    cores[5-8]:ready_for_packet<-router_row_2:ready_for_packet
    cores[9-12]:ready_for_packet<-router_row_3:ready_for_packet


}