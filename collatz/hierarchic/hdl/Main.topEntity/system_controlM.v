/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.4.6. DO NOT MODIFY.
*/
`timescale 100fs/100fs
module system_controlM
    ( // Inputs
      input  c$controller_result_value_bindCsr // clock
    , input  c$controller_result_value_bindCsr_0 // reset
    , input  c$controller_result_value_bindCsr_1 // enable
    , input [32:0] i1

      // Outputs
    , output wire [15:0] result
    );
  // Clash.hs:(58,1)-(59,57)
  wire [15:0] c$ds_app_arg;
  // Clash.hs:21:1-7
  reg [15:0] last_val = 16'd0;
  // Clash.hs:21:1-7
  wire [15:0] next_val;
  // Clash.hs:21:1-7
  wire [16:0] set_val;
  // Clash.hs:21:1-7
  wire [15:0] new_value;

  assign c$ds_app_arg = set_val[16:16] ? new_value : next_val;

  // register begin
  always @(posedge c$controller_result_value_bindCsr or  posedge  c$controller_result_value_bindCsr_0) begin : last_val_register
    if ( c$controller_result_value_bindCsr_0) begin
      last_val <= 16'd0;
    end else if (c$controller_result_value_bindCsr_1) begin
      last_val <= c$ds_app_arg;
    end
  end
  // register end

  assign next_val = i1[32:17];

  assign set_val = i1[16:0];

  assign new_value = set_val[15:0];

  assign result = last_val;


endmodule

